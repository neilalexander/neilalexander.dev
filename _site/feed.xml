<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.5">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2020-04-19T11:38:47+01:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">neilalexander.dev</title><subtitle>Network enthusiast and occasional developer of small utilities.
</subtitle><entry><title type="html">Understanding ICMP and why you shouldn’t just block it outright</title><link href="http://localhost:4000/2017/04/16/understanding-icmp.html" rel="alternate" type="text/html" title="Understanding ICMP and why you shouldn't just block it outright" /><published>2017-04-16T01:00:00+01:00</published><updated>2017-04-16T01:00:00+01:00</updated><id>http://localhost:4000/2017/04/16/understanding-icmp</id><content type="html" xml:base="http://localhost:4000/2017/04/16/understanding-icmp.html">&lt;p&gt;ICMP, or “Internet Control Message Protocol”, is a protocol designed to help computers understand when things go wrong out on a network. It’s a supporting protocol - that is, to say, that IP does not strictly require on ICMP to function, however typical networking devices such as routers and endpoints are expected to speak and understand ICMP. You might also know ICMP thanks to “ping”, a utility designed to see if a remote computer on a network is alive and connected. &lt;/p&gt;

&lt;p&gt;You might also know about ICMP from some security guide that you read online which tells you, unwaveringly, to block ICMP traffic. “ICMP is a security risk,” they chorus, “you must filter all ICMP packets from your network!”&lt;/p&gt;

&lt;p&gt;Sadly, there are a staggering number of security professionals who actually know very little about the real working mechanisms of IP (and an even more staggering number that know nothing about Layer 2!) writing articles online and broadcasting this advice with a broken, or altogether missing understanding of what ICMP actually does. &lt;/p&gt;

&lt;h4 id=&quot;so-what-does-icmp-do&quot;&gt;So what does ICMP do?&lt;/h4&gt;

&lt;p&gt;ICMP is a simple protocol. The packets are usually very small and typically contain a very limited amount of information. They also contain a type code that describes the purpose of the packet - in essence, the message being sent. There are a variety of type codes. ICMP is a bit of a diagnostic utility, and it is a bit of an error-reporting mechanism. It’s used to tell a network device about a problem in the network when sending an IP packet.&lt;/p&gt;

&lt;p&gt;You’re probably familiar with “ICMP ECHO”, or as it’s known more affectionately, “ping”. There are other codes that describe “ICMP DESTINATION UNREACHABLE” (for example, a host is offline, or there is no known route to it) and “ICMP TTL EXCEEDED” (the packet went over more hops than it was allowed to - actually, this is very useful for diagnosing routing loops!). There’s a code to describe “ICMP BAD IP HEADERS” for a malformed IP packet, and some more to include information about “ICMP REDIRECTS” - this packet is no good here, send it there instead.&lt;/p&gt;

&lt;p&gt;Network endpoints and routers should generate these ICMP messages as a result of one or more network conditions that may result in a packet not being delivered correctly to it’s destination. That is, if you send a packet to an IP address for which no route exists, expect a router in the path to respond back to you with a “destination unreachable” ICMP message.&lt;/p&gt;

&lt;h4 id=&quot;what-are-the-consequences-of-blocking-icmp&quot;&gt;What are the consequences of blocking ICMP?&lt;/h4&gt;

&lt;p&gt;When you block ICMP, you are effectively filtering or dropping these warning packets from being delivered back to the sending endpoint. That IP packet that you sent off before? It never got there, but you’ll never find out about it because the ICMP “destination unreachable” message was discarded before it reached you. Therefore your computer just assumes that nothing went wrong, and it will sit and wait, quite often for a long time, before giving up on expecting a response. This is known as a “timeout”.&lt;/p&gt;

&lt;p&gt;Had the “destination unreachable” packet made it back to you, you would know that there was a problem with the destination and your computer would give up instantaneously on that connection. You, or your application, would not be forced to wait (sometimes up to 60 seconds, or more!) for the connection to “timeout”.&lt;/p&gt;

&lt;p&gt;Another important ICMP packet that could be discarded by the filter is an “ICMP FRAGMENTATION REQUIRED” message. When that happens, things start to go really wrong.&lt;/p&gt;

&lt;h4 id=&quot;fragmentation-whats-that&quot;&gt;Fragmentation? What’s that?&lt;/h4&gt;

&lt;p&gt;So far we’ve seen the consequences of trying to talk to an unreachable host - whilst timeouts are inconvenient in that case, they are only masking another issue. However, blocking ICMP may even stop you from being able to communicate with reachable hosts too!&lt;/p&gt;

&lt;p&gt;The key to this is that not all network links are created equal. To understand why, a bit of Layer 2 knowledge is required. In Ethernet land, a single “frame” of data (that is, a frame containing an IP packet) can only be so big. The default maximum frame size for an Ethernet network is 1500 bytes. Once you go above 1500 bytes, you have to create a new frame to send the next 1500 bytes. And so on, and so forth. To stream a large amount of information, you may send hundreds, thousands, or even hundreds of thousands of frames. &lt;/p&gt;

&lt;p&gt;Of course not all network links are based solely on Ethernet. Many broadband providers rely on a protocol called PPP to establish your connection across their network to the Internet, as this provides them with the extra authentication capability to identify you as a specific customer. PPP has additional headers, and when also wrapped in an Ethernet frame (this is known as PPPoE), means that there is less space available for your IP packet. Therefore 1500 bytes actually becomes 1492 bytes when you include the additional room needed to “fit” PPP onto the pipe.&lt;/p&gt;

&lt;p&gt;This number - whether 1500, 1492 or any arbitrary number of bytes - is known as the “Maximum Transmission Unit”, or MTU, and network devices must be aware of the MTU of a given link so that it does not produce frames too big for that link.&lt;/p&gt;

&lt;p&gt;What happens when you send a frame that’s 1500 bytes down a link that only supports frames of 1492 bytes? You guessed it - it won’t fit. At this point, a router on the path has received a frame from a link where the MTU is 1500, and has tried to send it back out of another interface where the MTU is 1492.&lt;/p&gt;

&lt;p&gt;Logically this is an impossible situation, so the router simply discards the frame and sends back a “fragmentation required” ICMP message back to the sender to say “This packet is too big for where you’re trying to send it, so please make it smaller”. The sending computer can then break down the packet into smaller chunks and resend them so that they’ll now fit down the link. &lt;/p&gt;

&lt;p&gt;The sending computer will also “learn” from this ICMP message, temporarily remembering this condition for that given destination address, so the next packets that get sent will not exceed the given MTU size, avoiding the problem and allowing seamless communication back and forth. &lt;/p&gt;

&lt;h4 id=&quot;so-if-the-sender-never-gets-the-fragmentation-required-packet&quot;&gt;So if the sender never gets the “fragmentation required” packet…&lt;/h4&gt;

&lt;p&gt;… then the router on the path will discard the packet that’s too big, it’ll send an ICMP message back to you asking you to send smaller packets instead, that ICMP message will be blocked by your firewall and you will never get that memo, therefore your computer assumes that everything was fine.&lt;/p&gt;

&lt;p&gt;In reality, it isn’t fine because your packet was discarded by an upstream router so it simply never got there, and you never found out why because the warning ICMP packet was discarded before it got to you, therefore you sit and wait yet again until the “timeout” with absolutely no clue as to whether the data you sent actually got there or not. &lt;/p&gt;

&lt;p&gt;This is loosely known as “Path MTU discovery”, and is a core feature of IP, to ensure that larger packets can be sent across different types of network link without too much trouble. By blocking ICMP, you are completely removing the computer’s ability to learn about these conditions, creating unstable connectivity to that destination. &lt;/p&gt;

&lt;h4 id=&quot;okay-so-why-do-people-claim-its-such-a-security-problem&quot;&gt;Okay, so why do people claim it’s such a security problem?&lt;/h4&gt;

&lt;p&gt;There are some legitimate reasons for believing that ICMP is a security issue, and there are plenty of outright myths.&lt;/p&gt;

&lt;p&gt;One real problem is that “ICMP ECHO” packets (those used for “ping”) can actually contain any arbitrary amount of information of pretty much any kind, which makes them useful for tunnelling packets inside “ICMP ECHOs” to avoid network boundary filtering using specialised software for this purpose. The reality of this is that most people are completely unaware that this is even a possibility, and some more intelligent firewalls may even be able to identify when this is happening.&lt;/p&gt;

&lt;p&gt;Another is that “ICMP ECHO” actually reveals the existence of a device on the end of a given IP address very easily. The reality is that there are actually plenty of other ways to determine this, therefore this is a bit of a non-issue. Knowing that a machine exists doesn’t really help you all that much - ICMP doesn’t provide you with a “backdoor”. You would still need some other route in by means of other open ports, and those open ports are just as likely to reveal the existence of the machine as “ping” is. &lt;/p&gt;

&lt;p&gt;Some are concerned that the “ICMP TTL EXCEEDED” packets may actually reveal the existence of routers on a path between two given hosts. This is actually the basis for how “traceroute” functions - send multiple packets with deliberately incremental TTL values, allow them to expire in transit and capture which routers report back with the “ICMP TTL EXCEEDED” warning.&lt;/p&gt;

&lt;p&gt;Overly security-conscious individuals would prefer not to reveal the existence of things because it provides a kind of “security through obscurity”, and therefore will just block all ICMP, not understanding that it has many functions outside of “ICMP ECHO”. This is sadly a real world knowledge gap for a lot of IT professionals.&lt;/p&gt;

&lt;h4 id=&quot;but-i-really-really-dont-want-people-to-be-able-to-ping-devices-in-my-network&quot;&gt;But I really really don’t want people to be able to ping devices in my network.&lt;/h4&gt;

&lt;p&gt;Okay. In which case, what you need is to actually configure your firewall properly so that rather than blocking all ICMP traffic, you just simply block ICMP traffic with the specific type codes relative to “ping”. For your information, those are “ICMP ECHO REPLY” (type code 0) and “ICMP ECHO REQUEST” (type code 8). &lt;/p&gt;

&lt;p&gt;That way, other diagnostic traffic, such as “ICMP DESTINATION UNREACHABLE” (type code 3) or “ICMP TTL EXCEEDED” (type code 11) will still be allowed through, and your computers will be able to learn about network problems properly. Hooray!&lt;/p&gt;

&lt;p&gt;If you were particularly concerned about not revealing the existence of routers by means of “ICMP TTL EXCEEDED” (type code 11), then this specific message type could be filtered without too much ill-effect, at the expense of creating timeouts in genuine circumstances, i.e. when attempting to reconstruct fragmented packets or dropping packets where the TTL field has reached zero.&lt;/p&gt;

&lt;h4 id=&quot;what-else-should-i-know-about-icmp&quot;&gt;What else should I know about ICMP?&lt;/h4&gt;

&lt;p&gt;The problem is that even blocking “ping” can be bad in some scenarios - some software may use this mechanism to see if a host is available before trying to speak to it.&lt;/p&gt;

&lt;p&gt;An extremely widely used example of this is Active Directory for domain-joined Windows clients, where ICMP is used to perform “slow link detection” before downloading and applying Group Policy Objects (GPOs). For more information on the consequences of ICMP on Active Directory, take a look at TechNet. Seeing problems with GPOs applying at logon? This might be related.&lt;/p&gt;

&lt;p&gt;The other thing to be aware of is that ICMP is typically classed as “low priority” traffic by many routers and firewalls. That is, these devices should not prioritise ICMP traffic over typical IP traffic, therefore ICMP should really have little-to-no negative impact on the throughput of your network. However, if you were conscious about whether or not your network could be flooded with ICMP traffic, you can safely rate-limit ICMP, so long as you are not throttling it down so much that the ICMP packets end up being dropped regardless. &lt;/p&gt;

&lt;h4 id=&quot;in-conclusion&quot;&gt;In conclusion…&lt;/h4&gt;

&lt;p&gt;… there’s a lot more to ICMP than initially meets the eye, and there are very real cases where ICMP is needed. Don’t take the decision to block it outright lightly.&lt;/p&gt;</content><author><name>Neil Alexander</name></author><summary type="html">ICMP, or “Internet Control Message Protocol”, is a protocol designed to help computers understand when things go wrong out on a network. It’s a supporting protocol - that is, to say, that IP does not strictly require on ICMP to function, however typical networking devices such as routers and endpoints are expected to speak and understand ICMP. You might also know ICMP thanks to “ping”, a utility designed to see if a remote computer on a network is alive and connected. </summary></entry><entry><title type="html">Secure auto-login to BT Wi-Fi hotspots</title><link href="http://localhost:4000/2017/02/27/bt-wifi.html" rel="alternate" type="text/html" title="Secure auto-login to BT Wi-Fi hotspots" /><published>2017-02-27T00:00:00+00:00</published><updated>2017-02-27T00:00:00+00:00</updated><id>http://localhost:4000/2017/02/27/bt-wifi</id><content type="html" xml:base="http://localhost:4000/2017/02/27/bt-wifi.html">&lt;p&gt;&lt;strong&gt;Updated 17th January 2019&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Merging their partnership with FON with their own commercial BT Openzone Wi-Fi network, BT now provide a large-scale Wi-Fi service in the United Kingdom under the name “BT Wi-Fi”. With this, BT Broadband (and one-off paying) customers are able to access BT Wi-Fi not just from commercial locations but also from households with the BT Wi-Fi service broadcasting from their BT Home Hubs. &lt;/p&gt;

&lt;p&gt;However, the BT Wi-Fi service has it’s downsides. If you are using a computer and you connect to the “BTWiFi-with-FON” SSID, then there is no wireless encryption (like WPA) of any kind between your device and the hotspot. This means that your traffic, if not encrypted through some other means, is susceptible to eavesdropping by a nearby adversary. This can put you and your data/passwords at risk. This is actually a common problem with many public Wi-Fi hotspots, and an issue that not many users are educated on. Be cautious of any unsecured networks, kids!&lt;/p&gt;

&lt;p&gt;Secondly, and somewhat unrelated, the service will not “remember” you and will expect you to log back in each time you roam to a new hotspot or after having been away from a given hotspot for a period of time. This can become somewhat tedious if you are a frequent user of the service.&lt;/p&gt;

&lt;p&gt;It is possible, however, to securely connect to the BT Wi-Fi service using a WPA-encrypted wireless connection, and to be automatically logged in at the same time, by making use of an alternative wireless SSID currently used only by iOS devices with the BT Wi-Fi app installed. This article explores the working parts of the authenticated login and how to configure it on other devices.&lt;/p&gt;

&lt;h4 id=&quot;introducing-8021x&quot;&gt;Introducing 802.1X&lt;/h4&gt;

&lt;p&gt;802.1X is an authentication mechanism for network access points. There are both wireless and wired variants, and both support a number of authentication mechanisms, including certificate-based, SIM-based and integrated Windows logon, amongst others. The commonly adopted wireless variant is known as “WPA/WPA2 Enterprise”.&lt;/p&gt;

&lt;p&gt;The “BTWifi-X” SSID broadcasted by BT Home Hubs is a “WPA2 Enterprise”-enabled SSID. It supports authentication using EAP-TTLS, which is effectively certificate-based authentication in combination with a username and password. This means that, once authenticated, any traffic between the client device and the hotspot is encrypted. Furthermore, the username and password supplied in the profile allow the device to prove it’s identity to the BT Wi-Fi service automatically, allowing automatic login.&lt;/p&gt;

&lt;p&gt;It is this “BTWifi-X” SSID that we are interested in.&lt;/p&gt;

&lt;h4 id=&quot;obtaining-the-configuration-profile&quot;&gt;Obtaining the Configuration Profile&lt;/h4&gt;

&lt;p&gt;iOS devices are able to take advantage of the secure “BTWifi-X” SSID by installing a configuration profile from the BT Wi-Fi app from the App Store, or more accurately, from a webpage linked from the BT Wi-Fi app. The Configuration Profile is a “mobileconfig” file, specifically for iOS devices, which contains all of the relevant settings to make a secure connection. It includes the BT Wi-Fi security certificates, and your automatic login credentials. In order to continue, you will need to retrieve one of these profiles.&lt;/p&gt;

&lt;p&gt;These instructions assume that you have reasonable technical know-how, access to an iOS device and that you are a BT Broadband account holder. You can borrow an iOS device temporarily to complete these steps, and you do not need to be in range of a BT Wi-Fi hotspot to acquire the profile. &lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Install and open the BT Wi-Fi app, and go into the “More” tab.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Select “Settings” and then tap “Install connection profile”.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Enter your BT email address and password, tap “Install connection profile”. You must log in with your email address here instead of your username, or otherwise the “Install connection profile” option will not be shown.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Wait until you are redirected into Safari.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Once the device has jumped to Safari, cancel the prompt to install the profile on your device and then copy the URL from the address bar.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Send the link to your computer (by email, instant message or some other medium) and open the page in your web browser. The link may expire after some time so aim to do this quickly.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Open the page’s source using your browser’s developer tools and find the direct link to download the “mobileconfig” hidden in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;script&amp;gt;&lt;/code&gt; section of the HTML.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Upon navigating to this URL, you should be prompted to download the “mobileconfig” file. Save it to your computer and open it in the text editor of your choice.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;If you borrowed an iOS device to complete these steps, then from this point forward, you no longer need it and can uninstall the BT Wi-Fi app.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;PLEASE NOTE that this “mobileconfig” file uniquely identifies you, and contains your authentication credentials. Do not share any part of your “mobileconfig” with anyone else. Please see the Important Warning at the bottom of this article for more information.&lt;/p&gt;

&lt;h4 id=&quot;configuring-the-8021x-connection-on-macos&quot;&gt;Configuring the 802.1.X connection on macOS&lt;/h4&gt;

&lt;p&gt;If you just want to enable the automatic login to BT Wi-Fi from your macOS computer, then you need not dissect the Configuration Profile. Instead, just double-click the “mobileconfig” from Finder, agree to install the profile and the “BTWifi-X” wireless network will be configured automatically. &lt;/p&gt;

&lt;h4 id=&quot;dissecting-the-configuration-profile&quot;&gt;Dissecting the Configuration Profile&lt;/h4&gt;

&lt;p&gt;If you want to configure automatic login from another device that does not run iOS or macOS, then you will need to extract the relevant information from the “mobileconfig” file.&lt;/p&gt;

&lt;p&gt;The Configuration Profile is actually an XML document. It is signed and more than likely contains some garbage-looking characters at the beginning and end of the document, but these are actually certificates and signatures. The relevant and interesting section is the readable XML in the middle of the file.&lt;/p&gt;

&lt;p&gt;There are two sections that are relevant. The first is the section that contains your (unique) automatic login username and password, as shown below:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;key&amp;gt;TTLSInnerAuthentication&amp;lt;/key&amp;gt;
&amp;lt;string&amp;gt;PAP&amp;lt;/string&amp;gt;
&amp;lt;key&amp;gt;UserName&amp;lt;/key&amp;gt;
&amp;lt;string&amp;gt;8021x:BTRCon/newprof/XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX:XXX-XXX&amp;lt;/string&amp;gt;
&amp;lt;key&amp;gt;UserPassword&amp;lt;/key&amp;gt;
&amp;lt;string&amp;gt;XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX&amp;lt;/string&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Make a note of the username, which starts with 8021x:BTRcon/ and ends with some variation of your BT username. Also make a note of the password, which is a random string of numbers and letters.&lt;/p&gt;

&lt;p&gt;The second section is the section that contains the generic (non-unique) BT 802.1X certificate, which is used as a “trusted certificate” to prove that the hotspot you are connecting to really belongs to BT Wi-Fi:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;key&amp;gt;PayloadCertificateFileName&amp;lt;/key&amp;gt;
&amp;lt;string&amp;gt;BTwifi-X_DigicertRootCA.pem&amp;lt;/string&amp;gt;
&amp;lt;key&amp;gt;PayloadContent&amp;lt;/key&amp;gt;
&amp;lt;data&amp;gt;
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
...
&amp;lt;/data&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If you are well-versed on certificates, extract the Base64 certificate data from the “mobileconfig” file and transform it into a correctly-formatted certificate file and name it “BTwifi-X_DigicertRootCA.pem”.&lt;/p&gt;

&lt;p&gt;Otherwise, if you prefer convenience and you are happy to trust this website as a source, feel free to &lt;a href=&quot;/attachments/BTwifi-X_DigicertRootCA.pem&quot;&gt;click here to download the BT Wi-Fi trust certificate&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&quot;configuring-the-8021x-connection-on-windows&quot;&gt;Configuring the 802.1X connection on Windows&lt;/h4&gt;

&lt;p&gt;In order to enable the automatic BT Wi-Fi login from a Windows machine, you need to manually create the wireless profile.&lt;/p&gt;

&lt;p&gt;To start with, you will need to add the BT 802.1X certificate to your trusted certificate store:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Double-click the “BTwifi-X_DigicertRootCA.pem” file in Windows Explorer.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The certificate will be shown. Verify that it is issued to “DigiCert Global Root CA” and that it is issued by “DigiCert Inc”.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;If you downloaded the certificate from above and you wish to perform a further check on the certificate, then go into the Details tab and check that the Signature is “&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;08 3B E0 56 90 42 46 B1 A1 75 6A C9 59 91 C7 4A&lt;/code&gt;”.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;On the “General” tab, click the “Install Certificate…” button.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;In “Store Location”, select “Local Machine” and click “Next”. You may be presented with a UAC privilege prompt. Confirm that you wish to continue.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;When asked, select “Place all certificates in the following store”.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Click “Browse”, and select “Trusted Root Certification Authorities”.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Click “OK”.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Click “Next”, and then “Finish” to confirm.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now that you have the BT 802.1X certificate installed and trusted, you can now configure the wireless profile to connect to “BTWifi-X” hotspots: &lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Go into “Control Panel”, and then into “Network &amp;amp; Sharing Center”.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Click “Set up a new connection or network”.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;When prompted, select “Manually connect to a wireless network” and then click “Next”.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;In “Network Name”, enter: BTWifi-X&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;In “Security Type”, select “WPA2-Enterprise”.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Make sure that “Start this connection automatically” is checked, and click “Next”.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;When prompted, click “Change connection settings”.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;In the “Security” tab, under “Choose a network authentication method”, select “Microsoft: EAP-TTLS”.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Click the “Settings” button next to “Microsoft: EAP-TTLS”.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Under “Connect to these servers”, enter: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;8021x.bt.com&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Under “Trusted Root Certification Authorities”, place a checkbox next to “&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;8021x.bt.com&lt;/code&gt;”.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;On the same dialog box, uncheck “Enable identity privacy” so that it is disabled.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Make sure that “Unencrypted password (PAP)” is selected under “Select a non-EAP method for authentication”.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Click “OK” to return back to the “BTWifi-X Wireless Network Properties” dialog.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Click the “Advanced settings” button.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Place a check in the box next to “Specify authentication mode”, and then select “User authentication” in the drop-down box.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Click the “Save Credentials” button.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;When prompted, enter the full username and password that you extracted from the “mobileconfig” file above. The username starts with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;8021x:BTRcon/&lt;/code&gt; and ends with some variation of your BT username.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Click “OK”, and then click “OK” twice more to close each dialog box. Finally, click “Close”.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;You should now be able to connect to “BTWifi-X” from the wireless networks list. &lt;/p&gt;

&lt;h4 id=&quot;configuring-the-8021x-connection-on-other-platforms&quot;&gt;Configuring the 802.1X connection on other platforms&lt;/h4&gt;

&lt;p&gt;I am unable to provide specific instructions for other platforms, such as Android, but the following configuration settings should be of use to power users wishing to configure this on their devices:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Wireless Service Set Identifier (SSID): &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;BTWifi-X&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Wireless authentication method: WPA2 Enterprise&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Wireless authentication EAP protocol: EAP-TTLS&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Inner EAP-TTLS authentication protocol: PAP&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Identity Privacy: Disabled&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Username: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;8021x:BTRCon/newprof/XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX:XXX-XXX&lt;/code&gt; (as above)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Password: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX&lt;/code&gt; (as above)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Trusted Certificates: “DigiCert Global Root CA” certificate (as above)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Trusted Server Certificate Names / Connect To Names: 8021x.bt.com&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;important-warning&quot;&gt;Important Warning&lt;/h4&gt;

&lt;p&gt;This bit really is important. Please read it.&lt;/p&gt;

&lt;p&gt;Each BT Wi-Fi Configuration Profile UNIQUELY IDENTIFIES YOU, and contains specific authentication credentials linked to your BT Wi-Fi account. DO NOT SHARE your Configuration Profile, or any details from it, with anyone else.&lt;/p&gt;

&lt;p&gt;You are NOT ANONYMOUS when using the BT Wi-Fi service. If the service is abused, BT will be able to identify that the abuse is coming from your BT Wi-Fi identity and your service will likely be terminated by BT. You have been warned. Just don’t do it.&lt;/p&gt;

&lt;p&gt;You perform the above actions ENTIRELY AT YOUR OWN RISK. I am not affiliated with BT in any way, and do not take any responsibility for anything that may happen as a result of following the above instructions. &lt;/p&gt;</content><author><name>Neil Alexander</name></author><summary type="html">Updated 17th January 2019</summary></entry></feed>